name: publish.yml

on:
  push: 
    branches: [ "main" ]
    tags:
      - "v*.*.*"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
        
  release:
    
    name: Release
    
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS', 'macOSArm']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
          - kind: macOSArm
            os: macos-latest
            target: osx-arm64
            
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
          
      - name: Build
        shell: bash
        run: |
          # Define some variables for things we need
          tag=$(git describe --tags --abbrev=0)
          release_name="App-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish src/Chirp.CLI/Chrip.CLI.csproj --runtime "${{ matrix.target }}" -c Release -o "$release_name"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"
          
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "Chirp.CLI*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}